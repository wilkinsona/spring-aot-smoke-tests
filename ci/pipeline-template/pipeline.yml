#@ github = {
#@   "organization": "spring-projects",
#@   "repository": "spring-aot-smoke-tests",
#@   "uri": "https://github.com/spring-projects/spring-aot-smoke-tests.git"
#@ }
#@ docker_hub = {
#@   "organization": "springci"
#@ }
#@ branch = "3.0.x"
#@ milestone = "3.0.x"
#@ task_timeout = "1h00m"
#@ slack_alerts = False

#@ load("@ytt:data", "data")

#@ total_tests = 0
#@ for group in data.values.groups:
#@   for smoke_test in group.smoke_tests:
#@     if smoke_test.app_test:
#@       total_tests += 1
#@     end
#@     if smoke_test.test:
#@       total_tests += 1
#@     end
#@     if smoke_test.slack_channel:
#@       slack_alerts = True
#@     end
#@   end
#@ end
#@ total_tests = total_tests + 1
#@ test_interval = (60 * 24) // total_tests
#@ trigger_times = []
#@ for x in range(total_tests):
#@   hours = str((x * test_interval) // 60)
#@   if (len(hours) == 1):
#@     hours = "0" + hours
#@   end
#@   minutes = str((x * test_interval) % 60)
#@   if (len(minutes) == 1):
#@     minutes = "0" + minutes
#@   end
#@   trigger_times.append(hours + ":" + minutes)
#@ end
#@ test_index = 0

#@ if slack_alerts:
resource_types:
- name: slack-notification
  type: registry-image
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: latest
    repository: cfcommunity/slack-notification-resource
#@ end
resources:
- name: git-repo
  type: git
  icon: github
  source:
    uri: #@ github["uri"]
    username: ((github-username))
    password: ((github-password))
    branch: #@ branch
- name: ci-images-git-repo
  type: git
  icon: github
  source:
    uri: #@ github["uri"]
    branch: #@ branch
    paths:
      - "ci/images/*"
- name: ci-image
  type: registry-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: #@ milestone
    repository: #@ docker_hub["organization"] + "/" + github["repository"] + "-ci"
#@ if slack_alerts:
- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))
#@ end
#@ for group in data.values.groups:
#@   for smoke_test in group.smoke_tests:
#@     if smoke_test.app_test:
- name: #@ "time-" + smoke_test.name + "-app-test"
  type: time
  icon: clock-outline
  source:
    interval: 24h
    start: #@ trigger_times[test_index]
    stop: #@ trigger_times[test_index + 1]
#@       test_index += 1
#@     end
#@     if smoke_test.test:
- name: #@ "time-" + smoke_test.name + "-test"
  type: time
  icon: clock-outline
  source:
    interval: 24h
    start: #@ trigger_times[test_index]
    stop: #@ trigger_times[test_index + 1]
#@       test_index += 1
#@     end
#@   end
#@ end
jobs:
- name: build-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - get: git-repo
  - task: build-ci-image
    privileged: true
    file: git-repo/ci/tasks/build-ci-image.yml
    output_mapping:
      image: ci-image
    vars:
      ci-image-name: ci-image
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: update-pipeline
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: update_pipeline
      image: ci-image
      file: git-repo/ci/tasks/update-pipeline.yml
  - set_pipeline: self
    file: git-repo/ci/pipeline.yml
#@ for group in data.values.groups:
#@ for smoke_test in group.smoke_tests:
#@ if smoke_test.app_test:
- name: #@ smoke_test.name + "-app-test"
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
  - get: #@ "time-" + smoke_test.name + "-app-test"
    trigger: true
  - do:
    - task: app-test
      image: ci-image
      privileged: true
      timeout: #@ task_timeout
      file: git-repo/ci/tasks/smoke-test.yml
      tags:
        - native
      params:
        BRANCH: #@ branch
        SMOKE_TEST: #@ group.name + ":" + smoke_test.name
        TASK: appTest
        DOCKER_HUB_AUTH: ((docker-hub-auth))
        DOCKER_HUB_MIRROR: ((docker-hub-mirror))
        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
#@ if smoke_test.slack_channel:
    on_failure:
      do:
      - put: slack-alert
        params:
          channel: #@ smoke_test.slack_channel
          text: ":concourse-failed: <!here> <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
#@ end
- name: #@ smoke_test.name + "-native-app-test"
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
  - get: #@ "time-" + smoke_test.name + "-app-test"
    trigger: true
  - do:
    - task: native-app-test
      image: ci-image
      privileged: true
      timeout: #@ task_timeout
      file: git-repo/ci/tasks/smoke-test.yml
      tags:
        - native
      params:
        BRANCH: #@ branch
        SMOKE_TEST: #@ group.name + ":" + smoke_test.name
        TASK: nativeAppTest
        DOCKER_HUB_AUTH: ((docker-hub-auth))
        DOCKER_HUB_MIRROR: ((docker-hub-mirror))
        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
#@ if smoke_test.slack_channel:
    on_failure:
      do:
      - put: slack-alert
        params:
          channel: #@ smoke_test.slack_channel
          text: ":concourse-failed: <!here> <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
#@ end
#@ end
#@ if smoke_test.test:
- name: #@ smoke_test.name + "-test"
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
  - get: #@ "time-" + smoke_test.name + "-test"
    trigger: true
  - do:
    - task: test
      image: ci-image
      privileged: true
      timeout: #@ task_timeout
      file: git-repo/ci/tasks/smoke-test.yml
      tags:
        - native
      params:
        BRANCH: #@ branch
        SMOKE_TEST: #@ group.name + ":" + smoke_test.name
        TASK: test
        DOCKER_HUB_MIRROR: ((docker-hub-mirror))
        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
#@ if smoke_test.slack_channel:
    on_failure:
      do:
      - put: slack-alert
        params:
          channel: #@ smoke_test.slack_channel
          text: ":concourse-failed: <!here> <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
#@ end
- name: #@ smoke_test.name + "-native-test"
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
  - get: #@ "time-" + smoke_test.name + "-test"
    trigger: true
  - do:
    - task: native-test
      image: ci-image
      privileged: true
      timeout: #@ task_timeout
      file: git-repo/ci/tasks/smoke-test.yml
      tags:
        - native
      params:
        BRANCH: #@ branch
        SMOKE_TEST: #@ group.name + ":" + smoke_test.name
        TASK: nativeTest
        DOCKER_HUB_MIRROR: ((docker-hub-mirror))
        GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
        GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
#@ if smoke_test.slack_channel:
    on_failure:
      do:
      - put: slack-alert
        params:
          channel: #@ smoke_test.slack_channel
          text: ":concourse-failed: <!here> <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>"
          silent: true
          icon_emoji: ":concourse:"
          username: concourse-ci
#@ end
#@ end
#@ end
#@ end
groups:
#@ for group in data.values.groups:
#@   app_tests = []
#@   for smoke_test in group.smoke_tests:
#@     if smoke_test.app_test:
#@       app_tests.append(smoke_test.name + "-app-test")
#@       app_tests.append(smoke_test.name + "-native-app-test")
#@     end
#@   end
#@   if len(app_tests) > 0:
- name: #@ group.name + "-app-tests"
  jobs:
#@     for app_test in app_tests:
  - #@ app_test
#@     end
#@   end
#@   tests = []
#@   for smoke_test in group.smoke_tests:
#@     if smoke_test.test:
#@       tests.append(smoke_test.name + "-test")
#@       tests.append(smoke_test.name + "-native-test")
#@     end
#@   end
#@   if len(tests) > 0:
- name: #@ group.name + "-tests"
  jobs:
#@     for test in tests:
  - #@ test
#@     end
#@   end
#@ end
- name: "infrastructure"
  jobs:
    - "build-ci-images"
    - "update-pipeline"